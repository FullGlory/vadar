{
  "name": "win-fork",
  "version": "1.0.2",
  "description": "Spawn for node.js but in a way that works regardless of which OS you're using",
  "main": "index.js",
  "repository": {
    "type": "git",
    "url": "https://github.com/ForbesLindesay/win-spawn.git"
  },
  "bin": {
    "win-spawn": "./bin/win-spawn",
    "win-fork": "./bin/win-spawn"
  },
  "author": {
    "name": "ForbesLindesay"
  },
  "license": "BSD",
  "readme": "# win-spawn\r\n\r\n  Spawn for node.js but in a way that works regardless of which OS you're using.  Use this if you want to use spawn with a JavaScript file.  It works by explicitly invoking node on windows.  It also shims support for environment variable setting by attempting to parse the command with a regex.  Since all modification is wrapped in `if (os === 'Windows_NT')` it can be safely used on non-windows systems and will not break anything.\r\n\r\n## Installation\r\n\r\n  $ npm install win-spawn\r\n\r\n## Usage\r\n\r\n### Command Line\r\n\r\n  All the following will work exactly as if the 'win-spawn ' prefix was ommitted when on unix.\r\n\r\n    $ win-spawn foo\r\n    $ win-spawn ./bin/foo\r\n    $ win-spawn NODE_PATH=./lib foo\r\n    $ win-spawn NODE_PATH=./lib foo arg1 arg2\r\n\r\n### API\r\n\r\nThis will just pass through to `child_process.spawn` on unix systems, but will correctly parse the arguments on windows.\r\n\r\n```javascript\r\nspawn('foo', [], {stdio: 'inherit'});\r\nspawn('./bin/foo', [], {stdio: 'inherit'});\r\nspawn('NODE_PATH=./lib foo', [], {stdio: 'inherit'});\r\nspawn('NODE_PATH=./lib foo', [arg1, arg2], {stdio: 'inherit'});\r\n```",
  "readmeFilename": "README.md",
  "_id": "win-fork@1.0.2",
  "dist": {
    "shasum": "f9a0cf732a218211063ff7678ed61dad2f04ebae"
  },
  "_from": "win-fork@~1.0.0",
  "_resolved": "https://registry.npmjs.org/win-fork/-/win-fork-1.0.2.tgz"
}
