<!DOCTYPE html>
<html xmlns="http://www.w3.org/1999/xhtml">
	<head>
		<title>VADAR</title>
        <link href="site.css" rel="stylesheet" type="text/css" />
		<link href="builds.css" rel="stylesheet" type="text/css" />
		<script src="scripts/jquery-1.5.1.min.js" type="text/javascript"></script>
		<script src="scripts/jquery.isotope.min.js" type="text/javascript"></script>
	</head>
	<body>
		<div class="page">
			<!-- will contain the build radiator jobs -->
			<div id="builds" class="variable-sizes clearfix"/>
		</div>

		<script>

			var performUpdate = function () {

				var $container = $('#builds');

				$.ajax({
					dataType: "json",
					url: "http://localhost:8002/builds/board/1/projects",
					success: function (projects) {

						var orientation1x2 = 1;
						var orientation2x3 = 1;

						for (var p = 0; p < projects.length; p++) {

							var project = projects[p];

							for (var j = 0; j < project.jobs.length; j++) {

								var job = project.jobs[j];

								var status = job.latestBuild.status.toLowerCase();
								var buildFrequency = job.jobStatistics.buildFrequency;

								var height = "height1";
								var width = "width1";

								if (buildFrequency <= 0.2) { height = "height1"; width = "width1"; }
								else if ((buildFrequency <= 0.4) && (orientation1x2 == 0)) { orientation1x2 = 1; height = "height1"; width = "width2"; }
								else if ((buildFrequency <= 0.4) && (orientation1x2 == 1)) { orientation1x2 = 0; height = "height2"; width = "width1"; }
								else if (buildFrequency <= 0.6) { height = "height2"; width = "width2"; }
								else if ((buildFrequency <= 0.8) && (orientation2x3 == 0)) { orientation2x3 = 1; height = "height2"; width = "width3"; }
								else if ((buildFrequency <= 0.8) && (orientation2x3 == 1)) { orientation2x3 = 0; height = "height3"; width = "width2"; }
								else if (buildFrequency <= 1) { height = "height3"; width = "width3"; }

								var buildId = job.latestBuild.id;
								var type = job.name;
								var name = project.name;

								var panelId = 'p[' + project.id + '].j[' + job.id + ']';
								var $existingDiv = $('#builds div[id="' + panelId + '"]');

								console.log("Creating job " + name + "." + type);

								var $jobBox = $('<div id="' + panelId + '" class="variable-sizes project isotope-item">' +
											    '   <p class="number">' + '#' + buildId + '</p>' +
											    '   <h3 class="symbol">' + type + '</h3>' +
											    '   <h2 class="name">' + name + '</h2>' +
											    '   <p class="weight">' + buildFrequency + '</p>' +
											    '</div>');

								if (status == "fail") {
									var imageSrc = "images/" + job.latestBuild.culprit.displayName + ".jpg";
									$jobBox.append('<img class="image" src="' + imageSrc + '"></image>');

									console.log(name + '.' + type + ' has failed: ' + $jobBox.html());
								}

								if ($existingDiv.length != 0) {

									$existingDiv.html($jobBox.html());

									$existingDiv
										.removeClass("height1 height2 height3")
										.removeClass("width1 width2 width3")
										.removeClass("success warning fail")
										.addClass(height)
										.addClass(width)
										.addClass(status);

									$container.isotope('reLayout');
								}
								else {

									$jobBox
										.removeClass("height1 height2 height3")
										.removeClass("width1 width2 width3")
										.removeClass("success warning fail")
										.addClass(height)
										.addClass(width)
										.addClass(status);

									$container.isotope('insert', $jobBox);
								}

							}
						}
					}
				});

				$container.isotope('reloadItems').isotope({ sortBy: 'width' });
				$container.attr('style', $container.attr('style').replace(/height\s*:\s*0[^\d;]*;*/gi, ''));
			}

		</script>

		<script language="javascript">

			var $container = $('#builds');

			$container.isotope({
				// options
				itemSelector: '.project',
				layoutMode: 'masonry',
				getSortData: {
					name: function ($elem) {
						return $elem.find('.name').text();
					},
					symbol: function ($elem) {
						return $elem.find('.symbol').text();
					},
					number: function ($elem) {
						return parseInt($elem.find('.number').text(), 10);
					},
					weight: function ($elem) {
						return parseFloat($elem.find('.weight').text());
					},
					width: function ($elem) {
						if ($elem.hasClass("width1")) { return 1; }
						else if ($elem.hasClass("width2")) { return 2; }
						else if ($elem.hasClass("width3")) { return 3; }
						else { return $elem.width(); }
					}
				}
			});

			performUpdate();

			setInterval(function () { performUpdate(); }, 5000);
		
		</script>
	</body>
</html>
